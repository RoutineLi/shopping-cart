// Code generated by goctl. DO NOT EDIT.
// Source: im.proto

package server

import (
	"context"

	"graduate_design/websocket/im/internal/logic"
	"graduate_design/websocket/im/internal/svc"
	"graduate_design/websocket/im/types/websocket"
)

type IMServer struct {
	svcCtx *svc.ServiceContext
	websocket.UnimplementedIMServer
}

func NewIMServer(svcCtx *svc.ServiceContext) *IMServer {
	return &IMServer{
		svcCtx: svcCtx,
	}
}

func (s *IMServer) SendMessage(ctx context.Context, in *websocket.SendMessageRequest) (*websocket.SendMessageResponse, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

func (s *IMServer) RecvMessage(ctx context.Context, in *websocket.RecvMessageRequest) (*websocket.RecvMessageResponse, error) {
	l := logic.NewRecvMessageLogic(ctx, s.svcCtx)
	return l.RecvMessage(in)
}
