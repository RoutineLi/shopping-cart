syntax = "proto3";

package order;
option go_package = "./order";


service Order {
  rpc Orders(OrdersRequest) returns(OrdersResponse);
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc CreateOrderCheck(CreateOrderRequest) returns (CreateOrderResponse);
  rpc RollbackOrder (CreateOrderRequest) returns (CreateOrderResponse);
  rpc CreateOrderDTM(AddOrderRequest) returns (AddOrderResponse);
  rpc CreateOrderDTMRevert(AddOrderRequest) returns(AddOrderResponse);
  rpc GetOrderById(GetOrderByIdRequest) returns (GetOrderByIdResponse);
}

message OrdersRequest {
  int64 user_id = 1;
  int32 status = 2;
  int64 cursor = 3;
  int32 ps = 4;
}

message OrdersResponse {
  repeated OrderItem orders = 1;
  bool is_end = 2;
  string create_time = 3;
}

message OrderItem {
  int64 id = 1;
  string orderid = 2;
  int64 userid = 3;
  int64 proid = 4;
  string proname = 5;
  string proimage = 6;
  double currentunitprice = 7;
  int64 quantity = 8;
  double totalprice = 9;
  int64 createTime = 10;
  int64 updateTime = 11;
}

message CreateOrderRequest {
  int64 uid = 1;
  int64 pid = 2;
}

message CreateOrderResponse {
}



// ------------------------------------
// Messages
// ------------------------------------

message Orders {
  string id = 1;
  int64 userid = 2;
  int64 shoppingid = 3;
  double payment = 4;
  int64 paymenttype = 5;
  int64 postage = 6;
  int64 status = 7;
  int64 createTime = 8;
  int64 updateTime = 9;
}

message AddOrderRequest {
  int64 userid = 1;
  int64 productid = 2;
  int64 quantity = 3;
  int64 postage = 4;
  int64 receiveAddressId = 5;
}

message AddOrderResponse {
  string id = 1;
}

message GetOrderByIdRequest {
  int64 id = 1; //id
}

message GetOrderByIdResponse {
  Orders order = 1; //order
}